$date
	Sat Mar 01 11:27:44 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 8 ! F [7:0] $end
$var reg 8 " A [7:0] $end
$var reg 8 # B [7:0] $end
$var reg 8 $ C [7:0] $end
$var reg 8 % D [7:0] $end
$var reg 1 & clk $end
$scope module DUT $end
$var wire 8 ' A [7:0] $end
$var wire 8 ( B [7:0] $end
$var wire 8 ) C [7:0] $end
$var wire 8 * D [7:0] $end
$var wire 1 & clk $end
$var wire 8 + x_3 [7:0] $end
$var wire 8 , x_2 [7:0] $end
$var wire 8 - x_1 [7:0] $end
$var wire 8 . F [7:0] $end
$scope module p_1 $end
$var wire 8 / A [7:0] $end
$var wire 8 0 B [7:0] $end
$var wire 8 1 C [7:0] $end
$var wire 8 2 D [7:0] $end
$var wire 1 & clk $end
$var reg 8 3 x_1 [7:0] $end
$var reg 8 4 x_2 [7:0] $end
$upscope $end
$scope module p_2 $end
$var wire 8 5 A [7:0] $end
$var wire 8 6 B [7:0] $end
$var wire 1 & clk $end
$var reg 8 7 x_3 [7:0] $end
$upscope $end
$scope module p_3 $end
$var wire 8 8 A [7:0] $end
$var wire 8 9 B [7:0] $end
$var wire 1 & clk $end
$var reg 8 : F [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
0&
bx %
bx $
bx #
bx "
bx !
$end
#5
b11 %
b11 *
b11 2
b11 9
b110 $
b110 )
b110 1
b1100 #
b1100 (
b1100 0
b1010 "
b1010 '
b1010 /
#10
b11 ,
b11 4
b11 6
b10110 -
b10110 3
b10110 5
1&
#20
0&
#25
b111 %
b111 *
b111 2
b111 9
b101 $
b101 )
b101 1
b1010 #
b1010 (
b1010 0
#30
b11001 +
b11001 7
b11001 8
b11111110 ,
b11111110 4
b11111110 6
b10100 -
b10100 3
b10100 5
1&
#40
0&
#45
b11 %
b11 *
b11 2
b11 9
b110 $
b110 )
b110 1
b1100 #
b1100 (
b1100 0
#50
b11 ,
b11 4
b11 6
b10110 -
b10110 3
b10110 5
b10010 +
b10010 7
b10010 8
b1001011 !
b1001011 .
b1001011 :
1&
#60
0&
#65
b111 %
b111 *
b111 2
b111 9
b101 $
b101 )
b101 1
b1011 #
b1011 (
b1011 0
#70
b1111110 !
b1111110 .
b1111110 :
b11001 +
b11001 7
b11001 8
b11111110 ,
b11111110 4
b11111110 6
b10101 -
b10101 3
b10101 5
1&
#80
0&
#85
b11 %
b11 *
b11 2
b11 9
b110 $
b110 )
b110 1
b101 #
b101 (
b101 0
#90
b11 ,
b11 4
b11 6
b1111 -
b1111 3
b1111 5
b10011 +
b10011 7
b10011 8
b1001011 !
b1001011 .
b1001011 :
1&
#100
0&
#105
b111 %
b111 *
b111 2
b111 9
b101 $
b101 )
b101 1
b1010 #
b1010 (
b1010 0
b111 "
b111 '
b111 /
#110
b10000101 !
b10000101 .
b10000101 :
b10010 +
b10010 7
b10010 8
b11111110 ,
b11111110 4
b11111110 6
b10001 -
b10001 3
b10001 5
1&
#120
0&
#125
b1 %
b1 *
b1 2
b1 9
b100 $
b100 )
b100 1
b11 #
b11 (
b11 0
b1101 "
b1101 '
b1101 /
#130
b11 ,
b11 4
b11 6
b10000 -
b10000 3
b10000 5
b1111 +
b1111 7
b1111 8
b10010 !
b10010 .
b10010 :
1&
#140
0&
#145
b11 %
b11 *
b11 2
b11 9
b10100 $
b10100 )
b10100 1
b1111 #
b1111 (
b1111 0
b1 "
b1 '
b1 /
#150
b101101 !
b101101 .
b101101 :
b10011 +
b10011 7
b10011 8
b10001 ,
b10001 4
b10001 6
1&
#160
0&
#170
b100001 +
b100001 7
b100001 8
b111001 !
b111001 .
b111001 :
1&
#180
0&
#190
b1100011 !
b1100011 .
b1100011 :
1&
#200
0&
#210
1&
#220
0&
#230
1&
#240
0&
#250
1&
#260
0&
#270
1&
#280
0&
#290
1&
#300
0&
